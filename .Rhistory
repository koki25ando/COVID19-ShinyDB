getwd()
setwd("/Users/KokiAndo/Desktop/R/hatenablog/BBR")
library(BasketballAnalyzeR)
pacman::p_load(BasketballAnalyzeR, tidyverse)
github_install('sndmrc/BasketballAnalyzeR') # https://github.com/sndmrc/BasketballAnalyzeR
devtools::install_github('sndmrc/BasketballAnalyzeR') # https://github.com/sndmrc/BasketballAnalyzeR
pacman::p_load(BasketballAnalyzeR, tidyverse)
data(package = 'BasketballAnalyzeR')
PbP = PbPmanipulation(PbP.BDB)
str(PbP)
citation('tidyverse')
pacman::p_load(tidyverse, DT, plotly, lubridate, rvest, magick)
Sys.setlocale('LC_ALL','C')
## Data Loading
rating <- read.csv("ratings.csv")
rating$Title <- str_replace_all(rating$Title, "\xf4", "o")
rating$Directors <- str_replace(as.character(rating$Directors), "\xf4", "o")
print(paste("You have reviewed", nrow(rating), "movies"))
print(paste("You have reviewed", nrow(rating), "movies"))
Genres <- data.frame(rating$Genres)
Genres$rating.Genres <- str_replace(Genres$rating.Genres, ",", "$")
Genres <- Genres %>%
separate(rating.Genres, sep = "\\$", into = c("genre1", "genre2"))
Genres$genre2 <- Genres$genre2 %>%
str_replace(",", "$")
Genres <- Genres %>%
separate(genre2, sep = "\\$", into = c("genre2", "genre3"))
Genres$genre3 <- Genres$genre3 %>%
str_replace(",", "$")
Genres <- Genres %>%
separate(genre3, sep = "\\$", into = c("genre3", "genre4"))
Genres$genre4 <- Genres$genre4 %>%
str_replace(",", "$")
Genres <- Genres %>%
separate(genre4, sep = "\\$", into = c("genre4", "genre5"))
Genres$genre5 <- str_replace(Genres$genre5, ",", "$")
Genres <- Genres %>%
separate(genre5, sep = "\\$", into = c("genre5", "genre6"))
Genres$genre6 <- str_replace(Genres$genre6, ",", "$")
Genres <- Genres %>%
separate(genre6, sep = "\\$", into = c("genre6", "genre7"))
Genres.tidy <- gather(Genres, key = "No", value = "Genre")
Genres.tidy$Genre = str_remove(Genres.tidy$Genre, " ")
## Category Select
genre.option <- Genres.tidy[!duplicated(Genres.tidy$Genre),]$Genre %>%
str_remove(" ")
genre.option <- genre.option[-18]
genre.option <- arrange(data.frame(genre.option), genre.option)
genre.option <- genre.option[!duplicated(genre.option$genre.option),]
## Date Reviewed
rating$Date.Rated <- as.Date(rating$Date.Rated)
rating <- rating %>%
mutate(Review_YearMonth =
paste0(year(Date.Rated), "-", str_pad(month(Date.Rated), pad = "0", width = 2)))
## Best Movies by year
year.range <- rating[!duplicated(rating$Year), ][,"Year"]
year.range <- arrange(data.frame(year.range), desc(year.range))
## Reviews of This Month
names(rating)[8] <- "Run_Mins"
## Directors' Columns
director <- data.frame(table(rating$Directors)) %>%
filter(Freq < 15)
names(director) <- c("Directors", "Num")
dr.rating <- merge(rating, director, by.x = "Directors", by.y = "Directors")
dr.rating$Directors <- as.character(dr.rating$Directors) %>%
str_replace("\xf4", "o")
p = rating %>%
group_by(Year) %>%
mutate(Year_Count = sum(Year)/Year) %>%
ggplot(aes(Year)) +
geom_histogram(aes(text = paste0("Year: ", Year,
"<br>Count: ", Year_Count)),
binwidth = 1, fill = "#4F6CFF") +
theme_minimal()
ggplotly(p, tooltip="text")
plot_ly(as.data.frame(table(Genres.tidy$Genre))[-1,],
labels = ~Var1, values = ~Freq, type = 'pie',
textposition = "inside") %>%
layout(title = 'Movie Genres',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)) %>%
hide_legend()
plot_ly(data = rating,
x = ~IMDb.Rating, y = ~Your.Rating,
hoverinfo = "text",
text = ~paste0("Title: ", Title,
"<br>Director: ", Directors,
"<br>IMDb Rating: ", IMDb.Rating,
"<br>Your Rating: ", Your.Rating))
data.frame(table(rating$Review_YearMonth)) %>%
plot_ly(x = ~Var1, y = ~Freq, type = "bar",
hoverinfo = "text",
text = ~paste0("Year-Month: ", Var1,
"<br>Count: ", Freq)) %>%
layout(yaxis = list(title = "Count"),
xaxis = list(title = ""))
this_month_reviews_viz = rating %>%
filter(Review_YearMonth == max(rating$Review_YearMonth)) %>%
ggplot(aes(x = Date.Rated, y = Run_Mins, group = Title,
fill = Your.Rating)) +
geom_bar(aes(text = paste0("Date Reviewed: ", Date.Rated,
"<br>Title: ", Title, " (", Year, ")",
"<br>Your Rating: ", Your.Rating,
"<br>Run Minutes: ", Run_Mins, " Minutes")),
stat = "identity", colour = "grey") +
theme_minimal() +
labs(fill = "Rating", y = "Minutes")
ggplotly(
this_month_reviews_viz,
tooltip="text"
)
director_ranking = dr.rating %>%
filter(Num >= 4) %>%
ggplot(aes(x = reorder(Directors, Num), y = Num/Num, group = Title,
fill = Your.Rating,
text = paste0("Director: ", Directors,
"<br>Total Movies Reviewed: ", Num,
"<br>Title: ", Title, " (", Year, ")",
"<br>Rating Score: ", Your.Rating))) +
geom_bar(stat = "identity"
# , fill = "#4F6CFF"
) +
coord_flip() +
theme_minimal() +
labs(fill = "Rating", x = "", y = "Count")
ggplotly(
director_ranking,
tooltip="text"
)
rating_histogram = rating %>%
group_by(Your.Rating) %>%
mutate(Rating.Count = sum(Your.Rating)/Your.Rating) %>%
ggplot(aes(Your.Rating)) +
geom_histogram(aes(text = paste0(
"Rating Score: ", Your.Rating,
"<br>Movie Count: ", Rating.Count
)),
binwidth = 1, fill = "#4F6CFF") +
theme_minimal()
ggplotly(
rating_histogram,
tooltip="text"
)
DT::datatable(
rating %>%
arrange(desc(Date.Rated)) %>%
select(Title, IMDb.Rating, Your.Rating, Run_Mins, Year, Directors, Year),
options = list(
lengthMenu = c(5, 5, 10)
)
)
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
ggplot(aes(YearRated)) +
geom_bar(stat = "count")
rating %>%
mutate(ReleaseRated = year(as.Date(Release.Date))) %>%
# head
filter(ReleaseRated >= 2018) %>%
arrange(desc(Your.Rating)) %>%
select(Your.Rating, Title, Year) %>%
group_by()
rating %>%
group_by(Year) %>%
mutate(Year_Count = sum(Year)/Year) %>%
ggplot(aes(Year)) +
geom_histogram(aes(text = paste0("Year: ", Year,
"<br>Count: ", Year_Count)),
binwidth = 1, fill = "#4F6CFF") +
theme_minimal()
as.data.frame(table(Genres.tidy$Genre))[-1,],
plot_ly(as.data.frame(table(Genres.tidy$Genre))[-1,],
labels = ~Var1, values = ~Freq, type = 'pie',
textposition = "inside") %>%
layout(title = 'Movie Genres',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)) %>%
hide_legend()
plot_ly(data = rating,
x = ~IMDb.Rating, y = ~Your.Rating,
hoverinfo = "text",
text = ~paste0("Title: ", Title,
"<br>Director: ", Directors,
"<br>IMDb Rating: ", IMDb.Rating,
"<br>Your Rating: ", Your.Rating))
data.frame(table(rating$Review_YearMonth)) %>%
plot_ly(x = ~Var1, y = ~Freq, type = "bar",
hoverinfo = "text",
text = ~paste0("Year-Month: ", Var1,
"<br>Count: ", Freq)) %>%
layout(yaxis = list(title = "Count"),
xaxis = list(title = ""))
this_month_reviews_viz = rating %>%
filter(Review_YearMonth == max(rating$Review_YearMonth)) %>%
ggplot(aes(x = Date.Rated, y = Run_Mins, group = Title,
fill = Your.Rating)) +
geom_bar(aes(text = paste0("Date Reviewed: ", Date.Rated,
"<br>Title: ", Title, " (", Year, ")",
"<br>Your Rating: ", Your.Rating,
"<br>Run Minutes: ", Run_Mins, " Minutes")),
stat = "identity", colour = "grey") +
theme_minimal() +
labs(fill = "Rating", y = "Minutes")
ggplotly(
this_month_reviews_viz,
tooltip="text"
)
director_ranking = dr.rating %>%
filter(Num >= 4) %>%
ggplot(aes(x = reorder(Directors, Num), y = Num/Num, group = Title,
fill = Your.Rating,
text = paste0("Director: ", Directors,
"<br>Total Movies Reviewed: ", Num,
"<br>Title: ", Title, " (", Year, ")",
"<br>Rating Score: ", Your.Rating))) +
geom_bar(stat = "identity"
# , fill = "#4F6CFF"
) +
coord_flip() +
theme_minimal() +
labs(fill = "Rating", x = "", y = "Count")
ggplotly(
director_ranking,
tooltip="text"
)
director_ranking
rating %>%
group_by(Your.Rating) %>%
mutate(Rating.Count = sum(Your.Rating)/Your.Rating) %>%
ggplot(aes(Your.Rating)) +
geom_histogram(aes(text = paste0(
"Rating Score: ", Your.Rating,
"<br>Movie Count: ", Rating.Count
)),
binwidth = 1, fill = "#4F6CFF") +
theme_minimal()
DT::datatable(
rating %>%
arrange(desc(Date.Rated)) %>%
select(Title, IMDb.Rating, Your.Rating, Run_Mins, Year, Directors, Year),
options = list(
lengthMenu = c(5, 5, 10)
)
)
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
ggplot(aes(YearRated)) +
geom_bar(stat = "count")
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
head()
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
ggplot(aes(YearRated)) +
geom_bar(stat = "count")
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
head()
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
count(YearRated)
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
count(YearRated) %>%
ggplot(aes(YearRated)) %>%
geom_bar(stat = "identity", show.legend = F)
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
count(YearRated) %>%
ggplot(aes(YearRated))
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
count(YearRated) %>%
ggplot(aes(YearRated)) %>%
geom_histogram()
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
count(YearRated) %>%
ggplot(aes(YearRated)) +
# geom_histogram()
geom_bar(stat = "identity", show.legend = F)
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
count(YearRated) %>%
ggplot(aes(YearRated)) +
geom_histogram()
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
count(YearRated) %>%
ggplot(aes(YearRated, n)) +
# geom_histogram()
geom_bar(stat = "identity", show.legend = F)
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
count(YearRated) %>%
ggplot(aes(YearRated, n, label = n)) +
# geom_histogram()
geom_bar(stat = "identity", show.legend = F)
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
count(YearRated) %>%
ggplot(aes(YearRated, n, label = n)) +
# geom_histogram()
geom_bar(stat = "identity", show.legend = F) +
geom_label(angle = 45, show.legend = F, size = 10)
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
count(YearRated) %>%
ggplot(aes(YearRated, n, label = n, fill = YearRated), show.legend = F) +
geom_bar(stat = "identity", show.legend = F) +
geom_label(angle = 45, show.legend = F, size = 10)
rating %>%
select(Date.Rated) %>%
mutate(YearRated = year(as.Date(Date.Rated))) %>%
count(YearRated) %>%
ggplot(aes(YearRated, n, label = n, fill = as.character(YearRated)), show.legend = F) +
geom_bar(stat = "identity", show.legend = F) +
geom_label(angle = 45, show.legend = F, size = 10)
rating %>%
mutate(ReleaseRated = year(as.Date(Release.Date))) %>%
# head
filter(ReleaseRated >= 2018) %>%
arrange(desc(Your.Rating)) %>%
select(Your.Rating, Title, Year) %>%
group_by()
rating %>%
head()
rating %>%
filter(Title.Type == 'movie') %>%
head()
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes) %>%
head()
rating %>%
filter(Title.Type == 'movie') %>%
# select(Your.Rating, IMDb.Rating, Num.Votes) %>%
head()
rating %>%
filter(Title.Type == 'movie') %>%
# select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
head()
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
head()
rating %>%
filter(Title.Type == 'movie') %>%
# select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
head()
Genres.tidy
Genres.tidy %>%
count(Genre)
Genres.tidy %>%
count(Genre) %>%
arrange(desc(n))
Genres.tidy %>%
count(Genre) %>%
arrange(desc(n)) %>% na.omit()
Genres.tidy %>%
count(Genre) %>%
arrange(desc(n)) %>%
na.omit() %>%
top_n(10)
Genres.tidy %>%
count(Genre) %>%
arrange(desc(n)) %>%
na.omit() %>%
top_n(15)
Genres.tidy %>%
count(Genre) %>%
arrange(desc(n)) %>%
na.omit() %>%
top_n(15)
Genres.tidy %>%
count(Genre) %>%
arrange(desc(n)) %>%
na.omit() %>%
top_n(15) %>% pull(Drama)
Genres.tidy %>%
count(Genre) %>%
arrange(desc(n)) %>%
na.omit() %>%
top_n(15) %>% pull(Genre)
top_genres = Genres.tidy %>%
count(Genre) %>%
arrange(desc(n)) %>%
na.omit() %>%
top_n(15) %>%
pull(Genre)
top_genres
rating %>%
filter(Title.Type == 'movie') %>%
# select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
head()
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
head()
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
mutate(Topgenre = str_detect(Genres, top_genres)) %>%
head()
paste(top_genres, collapse = "|")
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
mutate(Topgenre = str_detect(Genres, top_genres_flat)) %>%
head()
top_genres_flat = paste(top_genres, collapse = "|")
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
mutate(Topgenre = str_detect(Genres, top_genres_flat)) %>%
head()
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
mutate(Topgenre = str_detect(Genres, top_genres_flat)) %>%
pull(Topgenre) %>% table
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
mutate(Topgenre = str_detect(Genres, top_genres_flat)) %>%
head()
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
mutate(Top_genre = str_detect(Genres, top_genres_flat)) %>%
head()
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
mutate(Top_genre = str_detect(Genres, top_genres_flat)) %>%
ggplot(aes(IMDb.Rating, Your.Rating, size = Num.Votes)) +
geom_point()
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
mutate(Top_genre = str_detect(Genres, top_genres_flat)) %>%
ggplot(aes(IMDb.Rating, Your.Rating, size = Num.Votes), fill = 'White') +
geom_point()
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
mutate(Top_genre = str_detect(Genres, top_genres_flat)) %>%
ggplot(aes(Your.Rating, IMDb.Rating, size = Num.Votes)) +
geom_point()
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
mutate(Top_genre = str_detect(Genres, top_genres_flat)) %>%
ggplot(aes(Your.Rating, IMDb.Rating, size = Num.Votes), alpha = 0.1) +
geom_point()
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
mutate(Top_genre = str_detect(Genres, top_genres_flat)) %>%
ggplot(aes(Your.Rating, IMDb.Rating, size = Num.Votes), alpha = 0.1, fill = "blue") +
geom_point()
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
mutate(Top_genre = str_detect(Genres, top_genres_flat)) %>%
ggplot(aes(Your.Rating, IMDb.Rating, size = Num.Votes), alpha = 0.1, fill = "BLUE") +
geom_point()
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
mutate(Top_genre = str_detect(Genres, top_genres_flat)) %>%
ggplot(aes(Your.Rating, IMDb.Rating, size = Num.Votes), alpha = 0.1) +
geom_point(colour = "red")
rating %>%
filter(Title.Type == 'movie') %>%
select(Your.Rating, IMDb.Rating, Num.Votes, Genres) %>%
mutate(Top_genre = str_detect(Genres, top_genres_flat)) %>%
ggplot(aes(Your.Rating, IMDb.Rating, size = Num.Votes), alpha = 0.1) +
geom_point(colour = "red", alpha = 0.1)
library(shiny)
getwd(
)
setwd("/Users/KokiAndo/Desktop/R/shiny dashboard")
setwd("/Users/KokiAndo/Desktop/R/shiny dashboard/covid19")
setwd("/Users/KokiAndo/Desktop/R/shiny dashboard/covid19_shiny")
setwd("/Users/KokiAndo/Desktop/R/shiny dashboard/covid19_shiny")
runApp()
runApp()
runApp()
runApp()
runApp()
data = fread('data/data.csv')
knitr::opts_chunk$set(echo = TRUE)
data = fread('/Users/KokiAndo/Desktop/R/shiny dashboard/covid19_shiny/data/data.csv')
pacman::p_load(tidyverse, data.table)
data = fread('/Users/KokiAndo/Desktop/R/shiny dashboard/covid19_shiny/data/data.csv')
head(data)
